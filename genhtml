#!/bin/sh -e
# This script takes a txt file (or multiple) and generates the
# appropriate html file (or index.html).

header() {
	cat - <<-EOF
	<!DOCTYPE html>
	<html>
		<head>
			<style>$(cat ../blog.info/css)</style>
			<title>$1</title>
		</head>
		<body>
			$(cat ../blog.info/header)
	EOF
}


if [ "$#" -gt 1 ]; then
	header "$TITLE"
fi

unset -v title
for post; do
	exec < "$post"
	read -r title

	if [ "$#" -gt 1 ]; then
		# generate hyperlinks for each post when generating a homepage
		printf '%s\n' "<a href=\"${post%.txt}.html\">" \
			"<h2>$title</h2>" \
			'</a>'
	else
		header "$title"
		printf '%s\n' "<h1>$title</h1>"
	fi

	while read -r line; do
		case "$line" in
			'')
				;;
			.img' '*) # syntax: .img src [alt...]
				line=${line#.img }
				src=${line%% *}
				alt=${line#* }
				printf '%s\n' "<a href=\"$src\">" \
					"<img src=\"$src\" alt=\"$alt\">" \
					'</a>'
				;;
			.link' '*) # syntax: .link [text shown before] link
				line=${line#.link }
				before=${line% *}
				link=${line##* }
				printf '%s\n' '<p>' \
					"$before" \
					"<a href=\"$link\">$link</a>" \
					'</p>'
				;;
			*)
				printf '%s\n' "<p>$line</p>"
				;;
		esac
	done
done

cat ../blog.info/footer

# close open tags
printf '%s\n' '</body>' '</html>'

